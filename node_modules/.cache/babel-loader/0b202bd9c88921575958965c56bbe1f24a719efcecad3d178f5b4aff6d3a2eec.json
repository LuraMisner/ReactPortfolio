{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misne\\\\OneDrive\\\\Desktop\\\\Doc\\\\more-react-practice\\\\react-portfolio\\\\src\\\\components\\\\Portfolio\\\\index.js\",\n  _s = $RefreshSig$();\nimport './index.scss';\nimport { Loader } from 'react-loaders';\nimport AnimatedLetters from '../AnimatedLetters';\nimport { useState, useEffect } from 'react';\nimport portfolioData from '../../data/portfolio.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Portfolio = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  useEffect(() => {\n    setTimeout(() => {\n      return setLetterClass('text-animate-hover');\n    }, 3000);\n  }, []);\n\n  // In a real life scenario, pull data from a database and use the key (not the idx)\n  const renderPortfolio = portfolio => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container\",\n      children: portfolio.map((port, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"portfolio-image\",\n            src: port.cover,\n            alt: \"portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container portfolio-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n          letterClass: letterClass,\n          strArray: 'Portfolio'.split(''),\n          idx: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderPortfolio(portfolioData.portfolio)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Portfolio, \"YlPNN7oJ+6mzs0fohZppsFcng1g=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["Loader","AnimatedLetters","useState","useEffect","portfolioData","Portfolio","letterClass","setLetterClass","setTimeout","renderPortfolio","portfolio","map","port","idx","cover","split"],"sources":["C:/Users/misne/OneDrive/Desktop/Doc/more-react-practice/react-portfolio/src/components/Portfolio/index.js"],"sourcesContent":["import './index.scss'\r\nimport { Loader } from 'react-loaders'\r\nimport AnimatedLetters from '../AnimatedLetters'\r\nimport { useState, useEffect } from 'react'\r\nimport portfolioData from '../../data/portfolio.json'\r\n\r\nconst Portfolio = () => {\r\n    const [letterClass, setLetterClass] = useState('text-animate')\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            return setLetterClass('text-animate-hover')\r\n        }, 3000)\r\n    }, [])\r\n\r\n    // In a real life scenario, pull data from a database and use the key (not the idx)\r\n    const renderPortfolio = (portfolio) => {\r\n        return (\r\n            <div className='images-container'>\r\n                {\r\n                    portfolio.map((port, idx) => {\r\n                        return (\r\n                            <div className='image-box' key={idx}>\r\n                                <img className='portfolio-image' src={port.cover} alt='portfolio'/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='container portfolio-page'>\r\n            <h1 className='page-title'>\r\n                <AnimatedLetters letterClass={letterClass} strArray={'Portfolio'.split('')} idx={15} />\r\n            </h1>\r\n            <div>{renderPortfolio(portfolioData.portfolio)}</div>\r\n        </div>\r\n        <Loader type='pacman' />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Portfolio"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,eAAe,MAAM,oBAAoB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,2BAA2B;AAAA;AAAA;AAErD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,cAAc,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZK,UAAU,CAAC,MAAM;MACb,OAAOD,cAAc,CAAC,oBAAoB,CAAC;IAC/C,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,eAAe,GAAIC,SAAS,IAAK;IACnC,oBACI;MAAK,SAAS,EAAC,kBAAkB;MAAA,UAEzBA,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;QACzB,oBACI;UAAK,SAAS,EAAC,WAAW;UAAA,uBACtB;YAAK,SAAS,EAAC,iBAAiB;YAAC,GAAG,EAAED,IAAI,CAACE,KAAM;YAAC,GAAG,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA;QAAE,GADvCD,GAAG;UAAA;UAAA;UAAA;QAAA,QAE7B;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEJ;EAEd,CAAC;EAED,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,0BAA0B;MAAA,wBACrC;QAAI,SAAS,EAAC,YAAY;QAAA,uBACtB,QAAC,eAAe;UAAC,WAAW,EAAEP,WAAY;UAAC,QAAQ,EAAE,WAAW,CAACS,KAAK,CAAC,EAAE,CAAE;UAAC,GAAG,EAAE;QAAG;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACtF,eACL;QAAA,UAAMN,eAAe,CAACL,aAAa,CAACM,SAAS;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD,eACN,QAAC,MAAM;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACrB;AAEX,CAAC;AAAA,GArCKL,SAAS;AAAA,KAATA,SAAS;AAuCf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}